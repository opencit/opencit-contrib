<?xml version="1.0" encoding="UTF-8"?>
<project name="contrib" default="all" basedir=".">
	<description>
	Run "ant ready" to ensure you have all pre-requisites to build
	Run "ant" or "ant build" to build the entire project
	Run "ant ready build packages" to clean build and generate packages
	Run "ant build packages" to rebuild only and generate packages
	Run "ant packages" to generate packages (requires prior build)
	</description>
	
	<target name="info">
		<echoproperties/>
	</target>
	
	<target name="init">
		<property environment="env"/>
		<condition property="cmd.maven" value="mvn.cmd">
			<os family="windows"/>
		</condition>
		<condition property="cmd.maven" value="${env.MAVEN_HOME}/bin/mvn">
			<os family="unix"/>
		</condition>
		<condition property="env.LINUX_TARGET" value="generic">
			<not><isset property="env.LINUX_TARGET"/></not>
		</condition>
	</target>
	
	<target name="ready" depends="init">

		<!-- the build.targets file is generated from a template, replacing LINUX_TARGET using environment variable or default value of 'generic' -->
		<copy file="build.targets.template" tofile="build.targets" overwrite="true"/>
		<replace file="build.targets" token="${LINUX_TARGET}" value="${env.LINUX_TARGET}"/>

		<!-- the root pom -->
		<exec executable="${cmd.maven}" resultproperty="mavenExitInstallPom">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="-DskipTests=true"/>
			<arg value="-N"/>
			<arg value="install"/>
		</exec>
		<!--
		<exec executable="${cmd.maven}" dir="maven/mtwilson-maven-root" resultproperty="mavenExitInstallPom">
			<arg value="-DskipTests=true"/>
			<arg value="install"/>
		</exec>
		<fail message="Failed to install top level pom.xml file" status="${mavenExitInstallPom}">
			<condition><not><equals arg1="${mavenExitInstallPom}" arg2="0"/></not></condition>
		</fail>
		<exec executable="${cmd.maven}" dir="maven/mtwilson-maven-java" resultproperty="mavenExitInstallJavaPom">
			<arg value="-DskipTests=true"/>
			<arg value="install"/>
		</exec>
		<fail message="Failed to install top level java pom.xml file" status="${mavenExitInstallJavaPom}">
			<condition><not><equals arg1="${mavenExitInstallJavaPom}" arg2="0"/></not></condition>
		</fail>
		-->
		<exec executable="${cmd.maven}" dir="maven" resultproperty="mavenExitInstallParents">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="-DskipTests=true"/>
			<arg value="-DskipAntBuild=true"/>
			<arg value="install"/>
		</exec>
		<fail message="Failed to install parent pom.xml files" status="${mavenExitInstallParents}">
			<condition><not><equals arg1="${mavenExitInstallParents}" arg2="0"/></not></condition>
		</fail>
	</target>
	
	<target name="clean" depends="init">
		<!-- clean all projects -->
		<exec executable="${cmd.maven}" resultproperty="mavenExitClean">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="clean"/>
		</exec>
		<fail message="Failed to clean project" status="${mavenExitClean}">
			<condition><not><equals arg1="${mavenExitClean}" arg2="0"/></not></condition>
		</fail>
		<!-- the packages -->
		<exec executable="${cmd.maven}" dir="packages" resultproperty="mavenExitCleanPackages">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="clean"/>
		</exec>
		<fail message="Cannot clean project packages" status="${mavenExitCleanPackages}">
			<condition><not><equals arg1="${mavenExitCleanPackages}" arg2="0"/></not></condition>
		</fail>
	</target>
	
	<target name="prebuild" depends="init">
		<!-- the feature projects -->
		<exec executable="${cmd.maven}"  dir="prebuild" resultproperty="mavenExitDownload">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="-DskipTests=true"/>
			<arg value="install"/>
		</exec>
		<fail message="Failed to download or maven install artifacts" status="${mavenExitDownload}">
			<condition><not><equals arg1="${mavenExitDownload}" arg2="0"/></not></condition>
		</fail>
	</target>
	
	<target name="build" depends="init,prebuild">
		<!-- the feature projects -->
		<exec executable="${cmd.maven}"  dir="features" resultproperty="mavenExitInstall">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="-DskipTests=true"/>
			<arg value="install"/>
		</exec>
		<fail message="Failed to build maven project" status="${mavenExitInstall}">
			<condition><not><equals arg1="${mavenExitInstall}" arg2="0"/></not></condition>
		</fail>
	</target>

	<target name="packages" depends="init">
		<!-- the root pom and all projects -->
		<exec executable="${cmd.maven}" dir="packages">
			<env key="LINUX_TARGET" value="${env.LINUX_TARGET}"/>
			<arg value="-DskipTests=true"/>
			<arg value="clean"/>
			<arg value="install"/>
		</exec>
	</target>

	<target name="all" depends="ready,clean,prebuild,build,packages"></target>
    <target name="klocwork" depends="init,ready">
        <exec executable="/bin/bash">
            <arg value="klocwork.sh"/>
        </exec>
    </target>
    
    <target name="build-with-scans">
        <parallel>
            <exec executable="ant">
                <arg value="all"/>
            </exec>
            <exec executable="ant">
                <arg value="klocwork"/>
            </exec>
        </parallel>
    </target>
</project>